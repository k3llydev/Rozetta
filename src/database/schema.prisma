generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Planets {
  id      String @id @unique
  name    String @unique
  ownerId String @unique
  points  BigInt @default(0)
  xp      BigInt @default(0)

  ownerUser Users                 @relation(fields: [ownerId], references: [id])
  guilds    PlanetsGuilds[]
  invites   PlanetsUsersInvites[]
  config    PlanetsConfig[]
  users     PlanetsUsers[]
}

model Channels {
  id                   String                 @id
  type                 String
  PlanetsGuildChannels PlanetsGuildChannels[]
}

model PlanetsRoles {
  id           String         @id
  label        String
  privileges   String
  PlanetsUsers PlanetsUsers[]
}

model Guilds {
  id       String  @id
  isActive Boolean

  planetGuilds PlanetsGuilds[]
}

model PlanetsUsers {
  id       String @id
  planetId String
  userId   String
  roleId   String

  planet Planets      @relation(fields: [planetId], references: [id])
  user   Users        @relation(fields: [userId], references: [id])
  role   PlanetsRoles @relation(fields: [roleId], references: [id])
}

model PlanetsGuilds {
  id       String @id
  planetId String
  guildId  String

  planet   Planets                @relation(fields: [planetId], references: [id])
  guild    Guilds                 @relation(fields: [guildId], references: [id])
  channels PlanetsGuildChannels[]
}

model PlanetsGuildMessages {
  id        String @id
  channelId String
  messageId String
  type      String

  channel PlanetsGuildChannels @relation(fields: [channelId], references: [id])
  message Messages             @relation(fields: [messageId], references: [id])
}

model Users {
  id        String @id
  discordId String @unique
  points    BigInt @default(0)
  xp        BigInt @default(0)

  planetUsers  PlanetsUsers[]
  invites      PlanetsUsersInvites[]
  ownedPlanets Planets[]
  session      HttpSessions?
}

model PlanetsGuildChannels {
  id            String @id
  planetGuildId String
  channelId     String
  type          String

  planetGuild          PlanetsGuilds          @relation(fields: [planetGuildId], references: [id])
  channel              Channels               @relation(fields: [channelId], references: [id])
  PlanetsGuildMessages PlanetsGuildMessages[]
}

model PlanetsUsersInvites {
  id       String @id
  userId   String
  planetId String

  user   Users   @relation(fields: [userId], references: [id])
  planet Planets @relation(fields: [planetId], references: [id])
}

model PlanetsConfig {
  id       String @id
  planetId String
  key      String
  value    String

  planet Planets @relation(fields: [planetId], references: [id])
}

model Messages {
  id                   String                 @id
  type                 String
  PlanetsGuildMessages PlanetsGuildMessages[]
}

model HttpSessions {
  id           String   @id
  accessToken  String   @unique
  refreshToken String   @unique
  expiresAt    DateTime
  userId       String   @unique
  // createdAt    DateTime @default(now())
  // updatedAt    DateTime @updatedAt

  user Users @relation(fields: [userId], references: [id])
}
